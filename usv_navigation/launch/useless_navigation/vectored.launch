<?xml version="1.0"?>
<launch>
    <arg name="gui" default="true"/>
    <arg name="gz" default="true"/>

    <!-- Launch Gazebo with underwater world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gz)" />
        <arg name="paused" value="true"/>
        <arg name="world_name" value="$(find freefloating_gazebo)/world/underwater.world"/>
    </include>
  
    <!-- spawn in Gazebo with GUI -->
    <group ns="vectored_auv">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find freefloating_gazebo_demo)/urdf/vectored.xacro"/>
        <node name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model vectored_auv -param robot_description -x 0 -y 0 -z 1 -R 0 -P 0 -Y 0"/>

        <!-- Load controller configurations (vehicle and arm) from YAML file to parameter server -->
        <rosparam file="$(find freefloating_gazebo_demo)/config/vectored.yaml" command="load"/>

        <!-- Launch low-level PID control for arm 
             body control will not activate as we expect direct thruster control -->
        <node name="pid_control" pkg="freefloating_gazebo" type="pid_control" output="screen" respawn="true"/>
        
        <!-- Manual control of joints -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true" if="$(arg gui)">
        <param name="use_gui" value="True"/>
        <remap from="joint_states" to="joint_setpoint" />        
        </node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" if="$(arg gui)"/>                 
        
        <!-- Manual control of thruster efforts -->
        <group ns="thrusters">
             <param name="robot_description" command="$(find xacro)/xacro --inorder $(find freefloating_gazebo_demo)/urdf/vectored_dummy.urdf"/>                         
             <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true" if="$(arg gui)">
             <param name="use_gui" value="True"/>
             <remap from="joint_states" to="/vectored_auv/thruster_command" />
             </node>             
        </group>
    </group>
        
    <!-- spawn terrain -->
    <param name="terrain_description" command="$(find xacro)/xacro $(find freefloating_gazebo_demo)/terrain/shipwreck/terrain.sdf"/>
    <node name="terrain_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-sdf -model terrain -param terrain_description -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>
   
</launch>
